exportPattern("^[^\\.]")	
#exportPattern("(?=^[^\\.])(?=^(?!REddyProc_))")	
# exports all variables that do not start with a period and does not start with REddyProc_ 
#  https://stackoverflow.com/questions/899422/regular-expression-for-a-string-that-does-not-start-with-a-sequence
#  https://stackoverflow.com/questions/469913/regular-expressions-is-there-an-and-operator


#import(aNamespace)	# only required when extending S3 methods 

#useDynLib(ProjectsDllBaseName)	# only required when supplying C or FORTRAN code 

import( methods )		# R5 classes

useDynLib(REddyProc, .registration = TRUE)


  importFrom("grDevices", "adjustcolor", "colorRampPalette", "dev.off",
             "pdf", "png", "rgb")
  importFrom("graphics", "abline", "axis", "box", "close.screen",
             "curve", "image", "legend", "lines", "mtext", "par", "plot",
             "points", "polygon", "screen", "split.screen")
  importFrom("stats", "aggregate", "anova", "approx", "coef", "cor",
             "cov", "lm", "median", "na.omit", "nls", "nls.control",
             "optim", "predict", "quantile", "resid", "rnorm", "sd")
  importFrom("utils", "capture.output", "download.file", "read.csv",
             "recover", "write.table")


importFrom(Rcpp, sourceCpp, evalCpp)
#import( inline )		# c++ code

#importFrom(plyr, arrange, ddply, rbind.fill)	# problems with function "." ...,  just do import(plyr)
#import (plyr)	# moved to dplyr rbind.fill -> bind_rows
import( dplyr )
importFrom(purrr, map, map_df)	
importFrom(tibble, tibble, as_tibble)	
importFrom(mlegp, mlegp, predict.gp)	# smoothing E0 in day-time partitioning by a Gaussian Process
importFrom(logitnorm, logit, invlogit)	# smoothing E0 in day-time partitioning by a Gaussian Process

# only checked in code by require(), let R CMD check complain (only NOTE)
#importFrom(boot, boot)
#importFrom(segmented, segmented, seg.control)
#importFrom( minpack.lm, nlsLM, nls.lm.control )

